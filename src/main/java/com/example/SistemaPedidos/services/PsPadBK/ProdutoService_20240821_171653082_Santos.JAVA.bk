package com.example.SistemaPedidos.services;

import java.util.List;
import java.util.UUID;

import org.springframework.stereotype.Service;

import com.example.SistemaPedidos.controllers.ProdutoController;
import com.example.SistemaPedidos.dtos.ProdutoRecordDto;
import com.example.SistemaPedidos.entities.ProdutoEntity;
import com.example.SistemaPedidos.repositories.ProdutoRepository;

import static org.springframework.hateoas.server.mvc.WebMvcLinkBuilder.linkTo;
import static org.springframework.hateoas.server.mvc.WebMvcLinkBuilder.methodOn;

@Service
public class ProdutoService {

    private ProdutoRepository produtoRepository;

    public ProdutoService(ProdutoRepository produtoRepository) {
        this.produtoRepository = produtoRepository;
    }

    public ProdutoEntity findProdutoById(UUID idProduto) throws Exception {
        var produto = produtoRepository.findById(idProduto).orElseThrow(() -> new Exception(" "));
        return produto;
    }

    public void deleteProdutoById(UUID idProduto) {
        produtoRepository.deleteById(idProduto);
    } public ProdutoEntity addProduto(ProdutoRecordDto produtoRecordDto) {
        var produto = new ProdutoEntity();
        produto.setNome(produtoRecordDto.nome());
        produto.setValor(produtoRecordDto.valor());
        produto.setCategoria(produtoRecordDto.categoria());
        return produtoRepository.save(produto);
    }

    public List<ProdutoEntity> getAllProdutos() throws Exception {
        var produtos = produtoRepository.findAll();
        if(!produtos.isEmpty()) {
            for(ProdutoEntity produto : produtos) {
                UUID idProduto = produto.getIdProduto();
                produto.add(linkTo(methodOn(ProdutoController.class).getProduto(idProduto)).withSelfRel());
            }
        }
        return produtos;
    }
public ProdutoEntity updateProduto(UUID idProduto, ProdutoRecordDto produtoRecordDto) throws Exception {
        var produto = findProdutoById(idProduto);
        produto.setNome(produtoRecordDto.nome());
        produto.setCategoria(produtoRecordDto.categoria());
        produto.setValor(produtoRecordDto.valor());
        return produtoRepository.save(produto);
    }

}
